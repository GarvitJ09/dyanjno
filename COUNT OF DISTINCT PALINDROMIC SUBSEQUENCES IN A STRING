import java.io.*;
import java.util.*;

public class Main {

	public static int solution(String str) {
		int[] pre = new int[str.length()];
		HashMap<Character, Integer> map = new HashMap<>();
		
		for(int i = 0; i < str.length(); i++) {
			char ch = str.charAt(i);
			if(map.containsKey(ch))
				pre[i] = map.get(ch);
			else
				pre[i] = -1;
			map.put(ch, i);
		}
		
		int[] next = new int[str.length()];
		map = new HashMap<>();
		for(int i = str.length() - 1; i >= 0; i--) {
			char ch = str.charAt(i);
			if(map.containsKey(ch))
				next[i] = map.get(ch);
			else
				next[i] = Integer.MAX_VALUE;
			map.put(ch, i);
		}
		
		int[][] dp = new int[str.length()][str.length()];
		
		for(int g = 0; g < dp.length; g++) {
			for(int i = 0, j = g; j < dp[0].length; i++, j++) {
				if(g == 0)
					dp[i][j] = 1;
				else if(g == 1)
					dp[i][j] = 2;
				else {
					if(str.charAt(i) == str.charAt(j)) {
						int n = next[i];
						int p = pre[j];
						
						if(n > p)
							dp[i][j] = (2 * dp[i+1][j-1]) + 2;
						else if(n == p)
							dp[i][j] = (2 * dp[i+1][j-1]) + 1;
						else
							dp[i][j] = (2 * dp[i+1][j-1]) - dp[n+1][p-1];
					}else
						dp[i][j] = dp[i+1][j] + dp[i][j-1] - dp[i+1][j-1];
				}
			}
		}
		return dp[0][dp[0].length - 1];
	}
	public static void main(String[] args) {
		Scanner scn = new Scanner(System.in);
		String str = scn.next();
		System.out.println(solution(str));
	}

}
